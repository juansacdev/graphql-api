# Queries
type Query {
	"Devuelve una lista de todos los cursos"
	getCourses: [Course!]!
	"Devuelve un curso en especifico, pasandole como argumento un id!"
	getCourse(id: ID!): Course

	"Devuelve una lista de todos los estudiantes"
	getStudents: [Student!]!
	"Devuelve un estudiante en especifico, pasandole como argumento un id!"
	getStudent(id: ID!): Student
}

# Mutations
type Mutation {
	"Crea un curso pasandole los campos que debe llevar un curso"
	createCourse(input: CourseInput!): Course!
	"Edita un curso"
	editCourse(id: ID!, input: CourseEditInput!): Course
	"Elimina un curso"
	deleteCourse(id: ID!): Course
	"Agrega una persona a un curso"
	addPerson(courseId: ID!, personId: ID!): Course
	"Quita a un estudiante de un curso"
	removePersonFromCourse(courseId: ID!, personId: ID!): Course

	"Crea un estudiante pasandole los campos que debe llevar un estudiante"
	createStudent(input: StudentInput!): Student!
	"Edita un estudiante"
	editStudent(id: ID!, input: StudentEditInput!): Student
	"Elimina un estudiante"
	deleteStudent(id: ID!): Student
}

# Custom types
type Course {
	id: ID!
	title: String!
	teacher: String!
	description: String
	topic: String
	level: Level
	person: [Student]
}

type Student {
	id: ID!
	name: String!
	email: String!
}

# Inputs
input CourseInput {
	title: String!
	teacher: String!
	description: String
	topic: String
	level: Level
}

input CourseEditInput {
	title: String
	teacher: String
	description: String
	topic: String
	level: Level
}

input StudentInput {
	name: String!
	email: String!
}

input StudentEditInput {
	name: String
	email: String
}

# Enums
enum Level {
	Principiante
	Intermedio
	Avanzado
}
